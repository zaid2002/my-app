{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   // Link,\n// } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const [mode, setMode] = useState('light'); //Whether dark mode is enabled or not \n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = \"#05203c\"; //#383b3e\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n      // document.title = \"TextUtils - DarkMode\"\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n      // document.title = \"TextUtils - LightMode\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      aboutText: \"About\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        showAlert: showAlert,\n        heading: \"Enter the text\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"3PANcZUkwn4FInWWHvNniS2W3SU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","About","Navbar","TextForm","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","alert","setAlert","showAlert","message","type","msg","setTimeout","mode","setMode","toggleMode","document","body","style","backgroundColor","children","title","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["E:/React/my-app/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   // Link,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const [mode, setMode] = useState('light'); //Whether dark mode is enabled or not \n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = \"#05203c\" //#383b3e\n      showAlert(\"Dark Mode has been enabled\", \"success\")\n      // document.title = \"TextUtils - DarkMode\"\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = \"white\"\n      showAlert(\"Light Mode has been enabled\", \"success\")\n      // document.title = \"TextUtils - LightMode\"\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n\n        <div className=\"container my-3\">\n        {/* In React Router v6, the 'Switch' component was removed and replaced by the 'Routes' component. The 'Routes' component functions similarly to 'Switch' but with some improvements and changes to match the new API in React Router v6. */}\n          {/* <Routes> */}\n            {/* <Route \n              path=\"/about\" \n              element={<About />} \n            /> */}\n\n            {/* <Route \n              path=\"/\" \n              element={<TextForm showAlert={showAlert} heading=\"Enter the text\" mode={mode} toggleMode={toggleMode} />}\n            /> */}\n            <TextForm showAlert={showAlert} heading=\"Enter the text\" mode={mode} toggleMode={toggleMode} />\n          {/* </Routes> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAK;IACnCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EACD,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EAC3C,MAAMoB,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIF,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS,EAAC;MAChDX,SAAS,CAAC,4BAA4B,EAAE,SAAS,CAAC;MAClD;IACF,CAAC,MACI;MACHM,OAAO,CAAC,OAAO,CAAC;MAChBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CX,SAAS,CAAC,6BAA6B,EAAE,SAAS,CAAC;MACnD;IACF;EACF,CAAC;EACD,oBACEP,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBAEInB,OAAA,CAACJ,MAAM;MAACwB,KAAK,EAAC,WAAW;MAACC,SAAS,EAAC,OAAO;MAACT,IAAI,EAAEA,IAAK;MAACE,UAAU,EAAEA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClFzB,OAAA,CAACF,KAAK;MAACO,KAAK,EAAEA;IAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEvBzB,OAAA;MAAK0B,SAAS,EAAC,gBAAgB;MAAAP,QAAA,eAY3BnB,OAAA,CAACH,QAAQ;QAACU,SAAS,EAAEA,SAAU;QAACoB,OAAO,EAAC,gBAAgB;QAACf,IAAI,EAAEA,IAAK;QAACE,UAAU,EAAEA;MAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE9F,CAAC;EAAA,eAER,CAAC;AAEP;AAACrB,EAAA,CAnDQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}